{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lecas\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Saas Cash\\\\Sistema\\\\Alboom System\\\\alboom_system\\\\aplicacaoalboomv0\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [dados, setDados] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await axios.get('http://localhost:5000/dados');\n        setDados(response.data);\n      } catch (error) {\n        console.error('Erro ao buscar dados:', error);\n      }\n    }\n    fetchData();\n  }, []);\n\n  // Extrair os dados do array para os labels e valores do gráfico\n  const labels = dados.map(item => item.Mes_Ano);\n  const valores = dados.map(item => item.Soma_Valor);\n\n  // Definir os dados do gráfico\n  const data = {\n    labels: labels,\n    datasets: [{\n      label: 'Soma Valor',\n      data: valores,\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      borderColor: 'rgba(75, 192, 192, 1)',\n      borderWidth: 1\n    }]\n  };\n\n  // Definir opções do gráfico\n  const options = {\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: true\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dados do MySQL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"I1jHL5YPXWGv+trqd4lXWHenmkQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Bar","jsxDEV","_jsxDEV","App","_s","dados","setDados","fetchData","response","get","data","error","console","labels","map","item","Mes_Ano","valores","Soma_Valor","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","yAxes","ticks","beginAtZero","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lecas/OneDrive/Área de Trabalho/Saas Cash/Sistema/Alboom System/alboom_system/aplicacaoalboomv0/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\n\nfunction App() {\n  const [dados, setDados] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await axios.get('http://localhost:5000/dados');\n        setDados(response.data);\n      } catch (error) {\n        console.error('Erro ao buscar dados:', error);\n      }\n    }\n    fetchData();\n  }, []);\n\n  // Extrair os dados do array para os labels e valores do gráfico\n  const labels = dados.map(item => item.Mes_Ano);\n  const valores = dados.map(item => item.Soma_Valor);\n\n  // Definir os dados do gráfico\n  const data = {\n    labels: labels,\n    datasets: [\n      {\n        label: 'Soma Valor',\n        data: valores,\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  // Definir opções do gráfico\n  const options = {\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: true,\n        },\n      }],\n    },\n  };\n\n  return (\n    <div>\n      <h1>Dados do MySQL</h1>\n      <Bar data={data} options={options} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,eAAeS,SAASA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,6BAA6B,CAAC;QAC/DH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF;IACAJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMM,MAAM,GAAGR,KAAK,CAACS,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,OAAO,CAAC;EAC9C,MAAMC,OAAO,GAAGZ,KAAK,CAACS,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACG,UAAU,CAAC;;EAElD;EACA,MAAMR,IAAI,GAAG;IACXG,MAAM,EAAEA,MAAM;IACdM,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,YAAY;MACnBV,IAAI,EAAEO,OAAO;MACbI,eAAe,EAAE,yBAAyB;MAC1CC,WAAW,EAAE,uBAAuB;MACpCC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;;EAED;EACA,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAE;MACNC,KAAK,EAAE,CAAC;QACNC,KAAK,EAAE;UACLC,WAAW,EAAE;QACf;MACF,CAAC;IACH;EACF,CAAC;EAED,oBACE1B,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAA2B,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB/B,OAAA,CAACF,GAAG;MAACU,IAAI,EAAEA,IAAK;MAACc,OAAO,EAAEA;IAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV;AAAC7B,EAAA,CAlDQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAoDZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}