{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lecas\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Saas Cash\\\\Sistema\\\\Alboom System\\\\alboom_system\\\\aplicacaoalboomv0\\\\frontend\\\\src\\\\pages\\\\Grafico.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Chart from 'chart.js/auto';\nimport { Link } from 'react-router-dom';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Grafico() {\n  _s();\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const [dados, setDados] = useState([]);\n  const [chartInstance, setChartInstance] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await axios.get(`http://localhost:5000/dados?startDate=${startDate.toISOString()}&endDate=${endDate.toISOString()}`);\n        setDados(response.data);\n        const labels = response.data.map(item => item.Mes_Ano);\n        const percentuais = response.data.map(item => item.Variacao_Percentual);\n        if (chartInstance) {\n          chartInstance.data.labels = labels;\n          chartInstance.data.datasets[0].data = percentuais;\n          chartInstance.update();\n        } else {\n          const ctx = document.getElementById('myChart');\n          const newChartInstance = new Chart(ctx, {\n            type: 'line',\n            data: {\n              labels: labels,\n              datasets: [{\n                label: 'Variação Percentual',\n                data: percentuais,\n                fill: false,\n                borderColor: 'rgb(255, 99, 132)',\n                backgroundColor: 'rgba(255, 99, 132, 0.2)',\n                tension: 0.4,\n                borderWidth: 2,\n                pointRadius: 4,\n                pointBackgroundColor: 'rgb(255, 99, 132)',\n                pointBorderColor: 'rgb(255, 255, 255)'\n              }]\n            },\n            options: {\n              responsive: true,\n              plugins: {\n                title: {\n                  display: true,\n                  text: 'Variação Percentual ao Longo do Tempo',\n                  font: {\n                    size: 18\n                  }\n                },\n                legend: {\n                  display: true,\n                  labels: {\n                    color: 'black',\n                    boxWidth: 15,\n                    font: {\n                      size: 14\n                    }\n                  }\n                }\n              },\n              scales: {\n                x: {\n                  title: {\n                    display: true,\n                    text: 'Mês/Ano',\n                    font: {\n                      size: 16\n                    }\n                  }\n                },\n                y: {\n                  title: {\n                    display: true,\n                    text: 'Variação Percentual',\n                    font: {\n                      size: 16\n                    }\n                  }\n                }\n              }\n            }\n          });\n          setChartInstance(newChartInstance);\n        }\n      } catch (error) {\n        console.error('Erro ao buscar dados:', error);\n      }\n    }\n    fetchData();\n  }, [startDate, endDate]);\n  const handleDateChange = () => {\n    // Atualiza o gráfico quando as datas são alteradas\n    setChartInstance(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gr\\xE1fico\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Voltar para Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"De:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: startDate,\n        onChange: date => {\n          setStartDate(date);\n          handleDateChange();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"At\\xE9:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: endDate,\n        onChange: date => {\n          setEndDate(date);\n          handleDateChange();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"myChart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(Grafico, \"1P1WlDZSxjRakmTIHbRneSlXEss=\");\n_c = Grafico;\nexport default Grafico;\nvar _c;\n$RefreshReg$(_c, \"Grafico\");","map":{"version":3,"names":["React","useState","useEffect","axios","Chart","Link","DatePicker","jsxDEV","_jsxDEV","Grafico","_s","startDate","setStartDate","Date","endDate","setEndDate","dados","setDados","chartInstance","setChartInstance","fetchData","response","get","toISOString","data","labels","map","item","Mes_Ano","percentuais","Variacao_Percentual","datasets","update","ctx","document","getElementById","newChartInstance","type","label","fill","borderColor","backgroundColor","tension","borderWidth","pointRadius","pointBackgroundColor","pointBorderColor","options","responsive","plugins","title","display","text","font","size","legend","color","boxWidth","scales","x","y","error","console","handleDateChange","children","fileName","_jsxFileName","lineNumber","columnNumber","to","style","marginBottom","selected","onChange","date","id","_c","$RefreshReg$"],"sources":["C:/Users/lecas/OneDrive/Área de Trabalho/Saas Cash/Sistema/Alboom System/alboom_system/aplicacaoalboomv0/frontend/src/pages/Grafico.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Chart from 'chart.js/auto';\r\nimport { Link } from 'react-router-dom';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nfunction Grafico() {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [dados, setDados] = useState([]);\r\n  const [chartInstance, setChartInstance] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/dados?startDate=${startDate.toISOString()}&endDate=${endDate.toISOString()}`);\r\n        setDados(response.data);\r\n\r\n        const labels = response.data.map(item => item.Mes_Ano);\r\n        const percentuais = response.data.map(item => item.Variacao_Percentual);\r\n\r\n        if (chartInstance) {\r\n          chartInstance.data.labels = labels;\r\n          chartInstance.data.datasets[0].data = percentuais;\r\n          chartInstance.update();\r\n        } else {\r\n          const ctx = document.getElementById('myChart');\r\n          const newChartInstance = new Chart(ctx, {\r\n            type: 'line',\r\n            data: {\r\n              labels: labels,\r\n              datasets: [{\r\n                label: 'Variação Percentual',\r\n                data: percentuais,\r\n                fill: false,\r\n                borderColor: 'rgb(255, 99, 132)',\r\n                backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n                tension: 0.4,\r\n                borderWidth: 2,\r\n                pointRadius: 4,\r\n                pointBackgroundColor: 'rgb(255, 99, 132)',\r\n                pointBorderColor: 'rgb(255, 255, 255)',\r\n              }]\r\n            },\r\n            options: {\r\n              responsive: true,\r\n              plugins: {\r\n                title: {\r\n                  display: true,\r\n                  text: 'Variação Percentual ao Longo do Tempo',\r\n                  font: {\r\n                    size: 18\r\n                  }\r\n                },\r\n                legend: {\r\n                  display: true,\r\n                  labels: {\r\n                    color: 'black',\r\n                    boxWidth: 15,\r\n                    font: {\r\n                      size: 14\r\n                    }\r\n                  }\r\n                }\r\n              },\r\n              scales: {\r\n                x: {\r\n                  title: {\r\n                    display: true,\r\n                    text: 'Mês/Ano',\r\n                    font: {\r\n                      size: 16\r\n                    }\r\n                  }\r\n                },\r\n                y: {\r\n                  title: {\r\n                    display: true,\r\n                    text: 'Variação Percentual',\r\n                    font: {\r\n                      size: 16\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          });\r\n          setChartInstance(newChartInstance);\r\n        }\r\n      } catch (error) {\r\n        console.error('Erro ao buscar dados:', error);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [startDate, endDate]);\r\n\r\n  const handleDateChange = () => {\r\n    // Atualiza o gráfico quando as datas são alteradas\r\n    setChartInstance(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Gráfico</h1>\r\n      <Link to=\"/\">Voltar para Home</Link>\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <label>De:</label>\r\n        <DatePicker selected={startDate} onChange={date => { setStartDate(date); handleDateChange(); }} />\r\n        <label>Até:</label>\r\n        <DatePicker selected={endDate} onChange={date => { setEndDate(date); handleDateChange(); }} />\r\n      </div>\r\n      <canvas id=\"myChart\"></canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Grafico;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}